/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U> ? ColumnType<S, I | undefined, U> : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface _SqlxMigrations {
  checksum: Buffer;
  description: string;
  execution_time: Int8;
  installed_on: Generated<Timestamp>;
  success: boolean;
  version: Int8;
}

export interface Extensions {
  id: Generated<number>;
  name: string;
}

export interface Posts {
  animated: Generated<boolean>;
  created_at: Generated<Timestamp>;
  description: string | null;
  ext_id: number;
  filename: string | null;
  id: Generated<number>;
  md5: string;
  trans: Generated<boolean>;
  updated_at: Generated<Timestamp>;
}

export interface PostSource {
  id: Generated<number>;
  post_id: number;
  post_source: string;
}

export interface PostTags {
  post_id: number;
  tag_id: number;
}

export interface RegistrationTokens {
  expiry: Generated<Timestamp>;
  id: Generated<number>;
  name: string | null;
  role: number;
  token: string;
}

export interface Role {
  description: string | null;
  id: Generated<number>;
  name: string;
}

export interface TagCategories {
  id: Generated<number>;
  name: string;
}

export interface Tags {
  category: number | null;
  id: Generated<number>;
  name: string;
}

export interface Users {
  avatar_md5: string | null;
  bio: string | null;
  creation: Generated<Timestamp>;
  email: string | null;
  id: Generated<number>;
  name: string;
  password_hash: string;
  role: number;
  settings: string | null;
}

export interface DB {
  _sqlx_migrations: _SqlxMigrations;
  extensions: Extensions;
  post_source: PostSource;
  post_tags: PostTags;
  posts: Posts;
  registration_tokens: RegistrationTokens;
  role: Role;
  tag_categories: TagCategories;
  tags: Tags;
  users: Users;
}
